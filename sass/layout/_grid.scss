.row {
    // 1140 pixel grid is a common standard
    max-width: $grid-width;

    // Center - auto means left and right will be the same
    margin: 0 auto;

    // No margin on the last row (last child)
    // Select everything except the last child (:not pseudo-class)
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    // Reduce row width on smaller screens
    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    // Square brackets target attributes of elements
    // Regex carat ^ operator "starts with" col-
    // So all of these styles will get applied to .col-x-of-y classes below
    [class^="col-"] {

        // Float layout
        float: left;

        // No gutter (margin) on the far right column
        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            // Remove margin on smaller screens
            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        // Single column on smaller screens
        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal})/2);
    }

    .col-1-of-3 {
        width: calc((100% - 2*#{$gutter-horizontal})/3);
    }

    .col-2-of-3 {
        width: calc(2*((100% - 2*#{$gutter-horizontal})/3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3*#{$gutter-horizontal})/4);
    }

    .col-2-of-4 {
        width: calc(2*((100% - 3*#{$gutter-horizontal})/4)  + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3*((100% - 3*#{$gutter-horizontal})/4) + 2*(#{$gutter-horizontal}));
    }
}