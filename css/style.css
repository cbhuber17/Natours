/* "Page Reset" is done with the universal * and body selectors below.  */
/* Fully control margin and padding automatically done by the browser */
/* Border box model borders and paddings are removed, gives more control */
/* Do after and before pseudo-elements to prevent strange things from happening */
/* They should also be a part of this reset class as well. */
*
*::after
*::before {
  margin: 0;
  padding: 0;
  /* Automatically inherit on what we put on box-sizing/border-box */
  /* Force inheritance as it is not by default */
  box-sizing: inherit; }

html {
  /* 10 px based on default of 16px default browser */
  font-size: 62.5%; }

/* Best practice to put the font family here and not in the universal selector * above */
body {
  /* The box-sizing property allows us to include the padding and border in an element's total width and height. */
  /* The box size doesn't change when using padding.  Many times devs need control of this. */
  box-sizing: border-box; }

@keyframes moveInLeft {
  /* Start */
  0% {
    /* Start invisible */
    opacity: 0;
    /* Start out of the left side */
    transform: translateX(-10rem); }
  /* Rotations */
  /* 60% {
        transform: rotate(180deg);
    } */
  /* Slight roll to the right side near the end */
  80% {
    transform: translateX(1rem); }
  /* Finish */
  100% {
    /* Finish visible */
    opacity: 1;
    /* No translation; make it look like without animation (what is looks like at the end) */
    transform: translate(0); } }

@keyframes moveInRight {
  /* Start */
  0% {
    /* Start invisible */
    opacity: 0;
    /* Start out of the right side */
    transform: translateX(10rem); }
  /* Rotations */
  /* 60% {
        transform: rotate(180deg);
    } */
  /* Slight roll to the left side near the end */
  80% {
    transform: translateX(-1rem); }
  /* Finish */
  100% {
    /* Finish visible */
    opacity: 1;
    /* No translation; make it look like without animation (what it looks like at the end) */
    transform: translate(0); } }

@keyframes moveInBottom {
  /* Start */
  0% {
    /* Start invisible */
    opacity: 0;
    /* Start out of the bottom side */
    transform: translateY(3rem); }
  /* Finish */
  100% {
    /* Finish visible */
    opacity: 1;
    /* No translation; make it look like without animation (what it looks like at the end) */
    transform: translate(0); } }

body {
  font-family: "lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: white;
  text-transform: uppercase;
  /* Prevent the animation from being shaky at the end (slight shift up) (Hack to fix it) */
  /* Normally used if an element is flipped 180 degrees and you want to hide it */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /* Block display allows occupy the entire width available and create line breaks before/after them */
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    /* Ease out: start fast, end slow */
    animation-timing-function: ease-out;
    /* Repeat animation 3 times */
    /* animation-iteration-count: 3; */
    /* Delay in starting the animation */
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewX(2deg) skewY(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.u-center-text {
  text-align: center; }

.u-margin-bottom-8 {
  margin-bottom: 8rem; }

.btn {
  /* :link pseudoclass to style elements under special conditions */
  /* Want the link color to stay the same after clicking anchor */
  /* When clicking the button, it moves .1rem to create a neat clicking effect */
  /* Virtual element after pseudo-class (put it behind actual element) */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* Make it in the same container as text-box parent class */
    /* Button is treated like text */
    display: inline-block;
    border-radius: 10rem;
    /* All the properties transition to be animated */
    transition: all 0.2s;
    /* Allows btn::after to use absolute positioning (reference required from first relative found) */
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    /* Make the shadow transparent and blurry */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* Want the button to grow and fade out when hovering */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    /* Change the shadow when clicking, lose some shadow and less blurry */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: white;
    color: #777; }
    .btn--white::after {
      background-color: white; }
  .btn::after {
    /* Content and display must be added even though empty */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /* Animations start on the initial state */
    transition: all 0.4s; }
  .btn--animated {
    /* Delay of 0.75s */
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* Automatically apply animation styles in moveInBottom 0% before the animation starts */
    /* (so the button is not visible upon start) */
    animation-fill-mode: backwards; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  /* Clip path defines a polygon, starting 0, 0 is the top left of the header image */
  /* Useful tool at https://bennettfeely.com/clippy/ */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    /* Absolute position of the logo box relative to its parent, which is header (set to relative in .header) */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* These top and left are in relation to the parent element */
    top: 40%;
    left: 50%;
    /* Puts the text in the middle of the page */
    /* In relation to the element itself and not the parent element */
    transform: translate(-50%, -50%);
    /* Center the button (button is inline and is treated like text) */
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2*6rem)/3); }
  .row .col-2-of-3 {
    width: calc(2*((100% - 2*6rem)/3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3*6rem)/4); }
  .row .col-2-of-4 {
    width: calc(2*((100% - 3*6rem)/4)  + 6rem); }
  .row .col-3-of-4 {
    width: calc(3*((100% - 3*6rem)/4) + 2*(6rem)); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
